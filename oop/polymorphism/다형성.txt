다형성: 사용편의성


** 메소드 오버라이딩, 오버로딩
객체 지향에서 다형성이라고 하면 오버라이딩, 오버 로딩이라고 할 수 있다.

물론 상속에서 배운것처럼 상위 클래스와 하위 클래스 사이에서도 다형성을 이야기 할수도 있고 인터페이스와 그것의 구현 클래스 사이에서도 다형성을 이야기 할 수 있다.
가장 기본은 오버라이딩과 오버로딩이다.

* 오버로딩이 다형성인지 아닌지에 대해서는 이견이 있다.

같은 메서드 이름, 같은 인자 목록으로 상위 클래스의 메서드를 재정의 : 오버 라이딩

같은 메서드 이름, 다른 인자 목록으로 다수의 메서드를 중복 정의 : 오버 로딩


============================================================================================================
*** 오버라이딩 주의점.

상위 클래스 타입의 객체 참조 변수를 사용하면 하위 클래스에서 정의된 추가 속성이나 메소드들은 사용이 불가능하다. (inheritance03 참조)
하지만 하위 클래스에서 오버라이딩을 진행하게 된다면 상위 클래스에서도 오버라이딩 된 메소드가 실행된다. 
============================================================================================================




다형성이 지원되지 않는 언어 

다형성이 지원되지 않는 언어에서는 정수 + 정수 하는 함수와 정수 + 실수 함수를 서로 이름을 다르게 하여 정의 해야한다.
하지만 자바에서는 오버 로딩을 통해 함수명은 같지만 인자값만 다르게 하여 여러가지의 경우의 수를 쉽게 만들 수 있다. (자바에서는 하나의 이름으로 여러가지의 함수를 만들 수 있다. 이게 어떻게 가능한걸까?)
더욱 더 강력한것은 제네릭 타입을 사용하게 되면 하나의 함수로 진행하게 된다

오버로딩 하나의 이름으로 여러가지 함수를 생성가능
오버라이딩 하위 클래스가 재정의한 메서드를 알아서 호출해 줌으로써 형변환이나 instanceOf 연산자를 써서 하위 클래스가 무엇인지 신경 쓰지 않아도 된다.

예시
동물[] 동물들 = new 동물[5]

동물[0] = new 쥐();
동물[1] = new 고양이();
.
.
.

이렇게 진행될때 동물의 하위클래스인 쥐, 고양이에서 오버라이딩을 통해 우는 함수를 재정의한다면.
동물이라는 타입 하나로 재정의된 메소드를 출력할 수 있다.

**** 오버라이딩을 통한 메서드 재정의, 오버로딩을 통한 메서드 중복 정의를 통해 다형성을 제공하고 이 다형성이 개발자가 프로그램을 작성할 때 사용편의성을 준다.